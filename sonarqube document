-->Introduction
SonarQube (previously called Sonar is an open source software quality management tool.
It will continuously analyze and measures quality of the source code.

It will generate the report if any issues in html format/PDF format.

It is a web based tool supports multiple languages (Java, C#, JS...) It will support multi OS platform (Windows, MAC, Linux...).

It will support multiple databases (MySQL, Oracle, Microsoft SQL Server, PostgreSQL.)
MySQL: 3306
Oracle: 1521
Microsoft SQL Server: 1433
PostgreSQL: 5432

Supports multiple browsers (IE, Microsoft Edge, FF, Chrome, Safari)

Sonar Qube uses -->It will identifies the below category of issues.

Duplicated code 
Coding standards industry coding standards
code coverage [80%] minimum 
Unit tests 
Complex code 
Comments 
Potential Bugs 
Architecture & Design

Maven/Tomcat/-> Developed using Java - supports only Java  programing language
SonarQube/Nexus/Jenkins -> Developed using this Java -> Supports multiple  programing Langs.. 

-->Relational DBS
Oracle 
my sql  --> 3306
post gear sql --> 5432
MS SQL Server
DB2 

is SQL Database?
No, SQL (Structured Query Language) is not a database itself but a standardized programming language specifically designed for managing and manipulating relational databases. SQL is used to perform tasks such as querying, updating, inserting, and deleting data in a database. It also includes commands for creating and modifying database structures, such as tables, indexes, and views.

Databases that use SQL for these operations are referred to as SQL databases or relational databases. Examples of SQL databases include:

1. **MySQL**
2. **Oracle Database**
3. **Microsoft SQL Server**
4. **PostgreSQL**
5. **SQLite**

These databases use SQL as their primary language for interacting with the data they store.

NO SQL DBS/ NON RELATIONAL DBS
MONGO DB
Cloudant
JSon format 
document == Table

H2 is inbuilt sonar qube  db server

--> Pre Requisition  for installing sonar qube
Java oracle
Wget Sonar repo 
Sonar qube zip file 
Install sonarqube


-->Architecture
Sonarqube scanner /sonarqube/report generate /errors send to developer


1) Vulnerabilities
2) Bugs
3) Code Smells 
used to identify in low level environment

-->Installation 
Install SonarQube Server
admin admin  = username password 

Tomcat/Jboss/Wildfly/Jenkins 8080 I
Nexus/ Jfrog artifactiry --> 8081
SonarQube -> 9000
MySQL DB --> 3306 
Postgre Sql --> 33006

In pom.xml update ip address , token
<sonar.login> tag use for token update

mvn package 
plugin name  is first sonar
mvn sonar: sonar  --> sonarqube scan will perform 
Goal name  is 2nd sonar 

HCL App Scan  --> vulnerabilities 

DevSecOps  
Sonar qube token generate by administration in gui of sonarqube console

23cd175450678669303a31b50bbd9f186683e6d9

SONAR QUBE DASHBOARD TABS :

projects -->contain all projects list 
issues --> will show all issues in the code developer need to fix those issues
rules --> to generate the report it will check all the rules and should be satisfied
quality profiles: [default / custom]

10 rules / 30 rules like this we use. Devops engineer only create the quality profiles

login sonar console --> create custom quality profile --> create click -->new profile

(name own)-->language (own) -->create click after login quality profile we see rules --> click on activate more -->activate rules

what ever we want --> make as default now project will use this qulaity profile only

quality profiles --> collection of rules we are going to apply while execting the sonarqube code 

quality gates --> collection of conditions which we are going to apply while execting the sonarqube code

login sonarqube --> add quality gate-->name own -->add condition-->give metrics and error %-->if that condition failes project will fail Executing

Rules
Quality Profiles  --> rules
Quality Gates --> conditions
Users Creation 
